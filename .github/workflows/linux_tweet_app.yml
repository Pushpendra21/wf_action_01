# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Deploy:
    runs-on: ubuntu-latest #run this workflow on ubuntu instance
    permissions: #make sure we add permission to read and write package
      contents: read
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1 #checkouts your repo, so this workflow can access it

      - name: Log in to GHCR
        env:
            REGISTRY: ghcr.io #create env called REGISTRY
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
            registry: ${{ env.REGISTRY }} #parse REGISTRY env value to here. Make sure it is correctly stating ghcr.io
            username: ${{ github.actor }} #this will be our github account
            password: ${{ secrets.CR_PAT }} #parse the value of repository secret called CR_PAT that we have created earlier

      - name: Login to GCR
        env:
          PROJECT_ID: teg-cloud-bfsi-uk1 #service-project-ardhan-1 #create env called PROJECT_ID consisted of our actual GCP Project ID
        uses: google-github-actions/setup-gcloud@v0.3.0 #checkouts GCR repo, so this workflow can access it
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }} #parse the value of repository secret called SERVICE_ACCOUNT_KEY
          project_id: ${{ env.PROJECT_ID }} #parse the value of env called PROJECT_ID
          export_default_credentials: true      

      - name: Build Docker Image
        env:
          IMAGE_NAME: linux_tweet_app #create env called IMAGE_NAME consisted of actual name of Docker Image after we build
          PROJECT_ID: teg-cloud-bfsi-uk1 #service-project-ardhan-1
        run: docker build -t $IMAGE_NAME:latest . #build the docker image

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc #push docker image to ghcr
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}        
